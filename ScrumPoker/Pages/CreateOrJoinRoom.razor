@page "/"
@page "/{RoomId}"
@using ScrumPoker.Model
@using StackExchange.Redis.Extensions.Core.Abstractions;
@inject IRedisCacheClient RedisCacheClient
@inject NavigationManager NavigationManager

<EditForm Model=@user style="margin-top: 40vh" OnValidSubmit="@createOrJoin">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="row">
        <div class="col-md-5 col-sm-12 mb-sm-3">
            <InputText @bind-Value=user.UserName type="text" class="form-control" placeholder="Ex: username 'einstein_a'" />
        </div>
        <div class="col-md-5 col-sm-12 mb-sm-3">
            <InputText @bind-Value=user.FullName type="text" class="form-control" placeholder="Ex: name 'Albert Einstein'" />
        </div>
        <div class="col-md-2 col-sm-12 mb-sm-3">
            <button class="btn btn-outline-primary" type="submit"> @ButtonName </button>
        </div>
    </div>
</EditForm>

@code {

    [Parameter]
    public string RoomId { get; set; }

    private User user = new User();

    private string ButtonName => this.RoomId == null ? "Create Room" : "Join Room";

    private async Task createOrJoin()
    {
        user.Id = Guid.NewGuid().ToString();

        if (RoomId == null)
        {
            RoomId = Guid.NewGuid().ToString();

            object data = new Room
            {
                Id = RoomId,
                IsShowPoint = false,
                Users = new List<User>
                {
                    new User {
                        Id = user.Id,
                        UserName = user.UserName,
                        FullName = user.FullName,
                        IsAdmin = true
                    }
                },
                Cards = new List<Card>()
            };
            await RedisCacheClient.Db0.AddAsync(RoomId, data, DateTime.UtcNow.AddDays(5));
        }
        else
        {
            Room room = await RedisCacheClient.Db0.GetAsync<Room>(RoomId);
            RoomId = room.Id;
            room.Users.Add(new User { Id= user.Id, FullName = user.FullName, UserName = user.UserName, IsAdmin = false });

            await RedisCacheClient.Db0.AddAsync(RoomId, room, DateTime.UtcNow.AddDays(5));
        }

        NavigationManager.NavigateTo($"/{RoomId}/{user.Id}");
    }
}